// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/matrix/factorize": {
            "post": {
                "description": "Recibe una matriz y retorna dos matrices Q y R",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Factorial QR de una matriz",
                "operationId": "factorize-matrix",
                "parameters": [
                    {
                        "description": "Solicitud",
                        "name": "Request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.QRResponse"
                        }
                    }
                }
            }
        },
        "/matrix/rotate": {
            "post": {
                "description": "Recibe una matriz y una cantidad de grados de giro (m√∫ltiplos de 90) y retorna la matriz rotada dicha cantidad de grados",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Rota una matriz",
                "operationId": "rotate-matrix",
                "parameters": [
                    {
                        "description": "Solicitud",
                        "name": "RotationRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RotationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.RotateResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "enum.MatrixType": {
            "type": "string",
            "enum": [
                "Q",
                "R",
                "Rotated"
            ],
            "x-enum-varnames": [
                "Q",
                "R",
                "Rotated"
            ]
        },
        "models.MatrixResult": {
            "type": "object",
            "properties": {
                "stats": {
                    "$ref": "#/definitions/models.MatrixStats"
                },
                "type": {
                    "$ref": "#/definitions/enum.MatrixType"
                },
                "value": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                }
            }
        },
        "models.MatrixStats": {
            "type": "object",
            "properties": {
                "avg": {
                    "type": "number"
                },
                "is_diagonal": {
                    "type": "boolean"
                },
                "max": {
                    "type": "number"
                },
                "min": {
                    "type": "number"
                },
                "sum": {
                    "type": "number"
                }
            }
        },
        "models.QRResponse": {
            "type": "object",
            "properties": {
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MatrixResult"
                    }
                }
            }
        },
        "models.Request": {
            "type": "object",
            "properties": {
                "matrix": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "with_statistics": {
                    "description": "required: false",
                    "type": "boolean"
                }
            }
        },
        "models.RotateResponse": {
            "type": "object",
            "properties": {
                "degrees": {
                    "type": "integer"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MatrixResult"
                    }
                }
            }
        },
        "models.RotationRequest": {
            "type": "object",
            "properties": {
                "degrees": {
                    "type": "integer"
                },
                "matrix": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "with_statistics": {
                    "description": "required: false",
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/matrix",
	Schemes:          []string{},
	Title:            "Go API",
	Description:      "API de operaciones sobre matrices.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
